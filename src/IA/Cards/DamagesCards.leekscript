// _______________________________________________________________________________________________________
function GBL_Resolve_KILL_SHOOT(_tpMalus, _target_cell) {
	var _effectFilters = [{
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_DAMAGE,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_POISON,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_NOVA_VITALITY,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_LIFE_DAMAGE,
		_minValue: 0,
		_maxValue: 10000
	}];

	var _effectSorters = [GBL_Contract_sorters.TARGET_TURRET_FIRST(), GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_DAMAGE
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_POISON
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_NOVA_VITALITY
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_LIFE_DAMAGE
		})
	];
	push(_effectSorters, _target_cell !== null ? GBL_Contract_sorters.DIST_CAST_ASC_TO(_target_cell) : GBL_Contract_sorters.TARGET_SAFEST());

	_IA_cards['DAMAGE_ZONE'].run(
		0,
		[],
		new Contract(
			null,
			GBL_Contract_types.TARGET,
			[
				GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.HAS_TARGETS_Q2(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.EFFECTS_OR(_effectFilters),
			],
			_effectSorters
		),
		[
			new Contract(
				CHIP_PROTEIN,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STEROID,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STRETCHING,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_DEVIL_STRIKE,
				GBL_Contract_types.TARGET,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON | LEEK_TYPE_ALLY_CASTER),
					GBL_Contract_filters.HAS_TARGETS_Q2(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
					GBL_Contract_filters.EFFECTS_LESSER({
						_target_type_from: LEEK_TYPE_ALLY_CASTER,
						_target_type_to: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
						_effect_type: EFFECT_DAMAGE,
						_factor: 2
					}),
					GBL_Contract_filters.EFFECTS_OR([{
						_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
						_effect_type: EFFECT_DAMAGE,
						_minValue: 300,
						_maxValue: 10000
					}]),
				],
				[
					GBL_Contract_sorters.EFFECT_DSC({
						_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
						_effect_type: EFFECT_DAMAGE
					}),
					_target_cell !== null ? GBL_Contract_sorters.DIST_CAST_ASC_TO(_target_cell) : GBL_Contract_sorters.TARGET_SAFEST(),
				])
		]
	);

	_IA_cards['WEAPONS'].run(
		0,
		[],
		new Contract(
			null,
			GBL_Contract_types.TARGET,
			[
				GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.HAS_TARGETS_Q2(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.EFFECTS_OR(_effectFilters),
			],
			_effectSorters
		),
		[
			new Contract(
				CHIP_PROTEIN,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STEROID,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STRETCHING,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[])
		]
	);

}
// _______________________________________________________________________________________________________
function GBL_Resolve_DAMAGE_ZONE(_target_cell) {
	var _effectFilters = [{
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_DAMAGE,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_POISON,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_NOVA_VITALITY,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_LIFE_DAMAGE,
		_minValue: 0,
		_maxValue: 10000
	}];

	var _effectSorters = [GBL_Contract_sorters.TARGET_TURRET_FIRST(), GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_DAMAGE
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_POISON
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_NOVA_VITALITY
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_LIFE_DAMAGE
		})
	];
	push(_effectSorters, _target_cell !== null ? GBL_Contract_sorters.DIST_CAST_ASC_TO(_target_cell) : GBL_Contract_sorters.TARGET_SAFEST());

	_IA_cards['DAMAGE_ZONE'].run(
		0,
		[],
		new Contract(
			null,
			GBL_Contract_types.TARGET,
			[
				GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.EFFECTS_OR(_effectFilters),
			],
			_effectSorters
		),
		[
			new Contract(
				CHIP_PROTEIN,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STEROID,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STRETCHING,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_DEVIL_STRIKE,
				GBL_Contract_types.TARGET,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON | LEEK_TYPE_ALLY_CASTER),
					GBL_Contract_filters.EFFECTS_LESSER({
						_target_type_from: LEEK_TYPE_ALLY_CASTER,
						_target_type_to: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
						_effect_type: EFFECT_DAMAGE,
						_factor: 2
					}),
					GBL_Contract_filters.EFFECTS_OR([{
						_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
						_effect_type: EFFECT_DAMAGE,
						_minValue: 300,
						_maxValue: 10000
					}]),
				],
				[
					GBL_Contract_sorters.EFFECT_DSC({
						_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
						_effect_type: EFFECT_DAMAGE
					}),
					_target_cell !== null ? GBL_Contract_sorters.DIST_CAST_ASC_TO(_target_cell) : GBL_Contract_sorters.TARGET_SAFEST(),
				])
		]
	);
}
// _______________________________________________________________________________________________________
function GBL_Resolve_WEAPONS(_target_cell) {
	var _effectFilters = [{
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_DAMAGE,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_POISON,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_NOVA_VITALITY,
		_minValue: 0,
		_maxValue: 10000
	}, {
		_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
		_effect_type: EFFECT_LIFE_DAMAGE,
		_minValue: 0,
		_maxValue: 10000
	}];
	var _effectSorters = [GBL_Contract_sorters.TARGET_TURRET_FIRST(), GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_DAMAGE
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_POISON
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_NOVA_VITALITY
		}),
		GBL_Contract_sorters.EFFECT_DSC({
			_target_type: LEEK_TYPE_ENEMY,
			_effect_type: EFFECT_LIFE_DAMAGE
		})
	];
	push(_effectSorters, _target_cell !== null ? GBL_Contract_sorters.DIST_CAST_ASC_TO(_target_cell) : GBL_Contract_sorters.TARGET_SAFEST());
	_IA_cards['WEAPONS'].run(
		0,
		[],
		new Contract(
			null,
			GBL_Contract_types.TARGET,
			[
				GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.EFFECTS_OR(_effectFilters),
			],
			_effectSorters
		),
		[
			new Contract(
				CHIP_PROTEIN,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STEROID,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]),
			new Contract(
				CHIP_STRETCHING,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[])
		]
	);
}
// _______________________________________________________________________________________________________
function GBL_Resolve_POISON(_target_cell) {
	_IA_cards['POISON'].run(
		0,
		[],
		new Contract(
			null,
			GBL_Contract_types.TARGET,
			[
				GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON),
				GBL_Contract_filters.EFFECTS_OR([{
					_target_type: LEEK_TYPE_ENEMY,
					_effect_type: EFFECT_POISON,
					_minValue: 0,
					_maxValue: 10000
				}, ]),
			],
			[
				GBL_Contract_sorters.TARGET_TURRET_FIRST(),
				GBL_Contract_sorters.EFFECT_DSC({
					_target_type: LEEK_TYPE_ENEMY | LEEK_TYPE_ENEMY_SUMMON,
					_effect_type: EFFECT_POISON
				}),
				_target_cell !== null ? GBL_Contract_sorters.DIST_CAST_ASC_TO(_target_cell) : GBL_Contract_sorters.TARGET_SAFEST(),
			]
		),
		[
			new Contract(
				CHIP_WIZARDRY,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]
			),
			new Contract(
				CHIP_STRETCHING,
				GBL_Contract_types.ON_ME,
				[
					GBL_Contract_filters.TARGETS_ONLY(LEEK_TYPE_ALLY_CASTER),
				],
				[]
			)
		]
	);
}
// _______________________________________________________________________________________________________