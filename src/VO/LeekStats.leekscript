class LeekState {
	__id;
	turn;
	leek_id;
	leek_life;
	leek_lifeMax;
	leek_lifeNext;
	leek_poison;
	leek_varLife;
	leek_lifeEmergency;
	leek_lifePop;
	leek_lifeWarn;
	leek_lifeQ1;
	leek_lifeQ2;
	leek_lifeQ3;

	constructor(idOrDocument) {
		if (typeOf(idOrDocument) === TYPE_NUMBER) {
			var leek = getLeekById(idOrDocument);
			this.__id = null;
			this.turn = GBL_currentTurn;
			this.leek_id = idOrDocument;
			this.leek_life = clone(leek.leek_life, 2);
			this.leek_lifeMax = clone(leek.leek_lifeMax, 2);
			this.leek_poison = getEffectSumValueOfLeek(leek, EFFECT_POISON);
			this.leek_varLife = 0;
			// ---
			this.leek_lifeNext = this.leek_life - this.leek_poison;
			this.leek_lifeEmergency = this.leek_lifeNext <= (GBL_life_threshold_emergency * this.leek_lifeMax);
			this.leek_lifePop = this.leek_lifeNext <= (GBL_life_threshold_pop * this.leek_lifeMax);
			this.leek_lifeWarn = this.leek_lifeNext <= (GBL_life_threshold_warn * this.leek_lifeMax);
			this.leek_lifeQ1 = this.leek_lifeNext <= (this.leek_lifeMax * 0.35);
			this.leek_lifeQ2 = this.leek_lifeNext <= (this.leek_lifeMax * 0.55);
			this.leek_lifeQ3 = this.leek_lifeNext <= (this.leek_lifeMax * 0.75);
		} else {
			this.__id = idOrDocument[__id];
			this.turn = idOrDocument['turn'];
			this.leek_id = idOrDocument['leek_id'];
			this.leek_life = idOrDocument['leek_life'];
			this.leek_lifeMax = idOrDocument['leek_lifeMax'];
			// ---
			this.leek_poison = idOrDocument['leek_poison'];
			// ---
			this.leek_varLife = idOrDocument['leek_varLife'];
			// --- 
			this.leek_lifeNext = idOrDocument['leek_lifeNext'];
			this.leek_lifeEmergency = idOrDocument['leek_lifeEmergency'];
			this.leek_lifePop = idOrDocument['leek_lifePop'];
			this.leek_lifeWarn = idOrDocument['leek_lifeWarn'];
			this.leek_lifeQ1 = idOrDocument['leek_lifeQ1'];
			this.leek_lifeQ2 = idOrDocument['leek_lifeQ2'];
			this.leek_lifeQ3 = idOrDocument['leek_lifeQ3'];
		}
	}

	toDocument() {
		return [
			__id: this.__id,
			'turn': this.turn,
			'leek_id': this.leek_id,
			'leek_life': this.leek_life,
			'leek_lifeNext': this.leek_lifeNext,
			'leek_poison': this.leek_poison,
			'leek_varLife': this.leek_varLife,
			'leek_lifeEmergency': this.leek_lifeEmergency,
			'leek_lifePop': this.leek_lifePop,
			'leek_lifeWarn': this.leek_lifeWarn,
			'leek_lifeQ1': this.leek_lifeQ1,
			'leek_lifeQ2': this.leek_lifeQ2,
			'leek_lifeQ3': this.leek_lifeQ3,
		]
	}

	updateStateWithPrevious(previous_document) {
		this.leek_varLife = this.leek_life - previous_document['leek_life'];
		this.leek_lifeNext = max(this.leek_life + min(this.leek_varLife, previous_document['leek_varLife']) - this.leek_poison, 0);
		this.leek_lifeEmergency = this.leek_lifeNext <= (GBL_life_threshold_emergency * this.leek_lifeMax);
		this.leek_lifePop = this.leek_lifeNext <= (GBL_life_threshold_pop * this.leek_lifeMax);
		this.leek_lifeWarn = this.leek_lifeNext <= (GBL_life_threshold_warn * this.leek_lifeMax);
		this.leek_lifeQ1 = this.leek_lifeNext <= (this.leek_lifeMax * 0.25);
		this.leek_lifeQ2 = this.leek_lifeNext <= (this.leek_lifeMax * 0.50);
		this.leek_lifeQ3 = this.leek_lifeNext <= (this.leek_lifeMax * 0.75);
	}
}