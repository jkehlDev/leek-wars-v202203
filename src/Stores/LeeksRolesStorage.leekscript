function _countSummonsChips(leek) {
	var chips = leek.leek_chips;
	var count_bulb_chips = 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_TACTICIAN_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_LIGHTNING_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_WIZARD_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_FIRE_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_HEALER_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_ICED_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_ROCKY_BULB;
	}) ? 1 : 0;
	count_bulb_chips += arrayInclude(chips, function(chip_id) {
		return chip_id === CHIP_PUNY_BULB;
	}) ? 1 : 0;
	return count_bulb_chips;
}

function refreshLeeksRole() {
	_refreshCountLeekByTypeAndRole(LEEK_TYPE_ALLY);
	_refreshCountLeekByTypeAndRole(LEEK_TYPE_ENEMY);
	_refreshCountLeekByTypeAndRole(LEEK_TYPE_ENEMY_SUMMON);
	_refreshCountLeekByTypeAndRole(LEEK_TYPE_ALLY_SUMMON);
}

function _refreshCountLeekByTypeAndRole(leek_type) {
	for (var leek_role = 0; leek_role < 6; leek_role++) {
		GBL_StoredLeeks[leek_type].role_count[leek_role] = arrayCount(getAliveLeeksByType(leek_type), function(leek) {
			return leek.leek_role === leek_role;
		});
	}
}

function getLeeksCountByTypeNdRole(leek_type, leek_role) {
	return GBL_StoredLeeks[leek_type].role_count[leek_role];
}

function getLeeksByTypeNdRole(leek_type, leek_role) {
	return arrayFilter(getAliveLeeksByType(leek_type), function(leek) {
		return leek.leek_role === leek_role;
	});
}