/**
 * [SORTER NAME]:[SORTER PARAMETERS]
 * DIST_TARGET_ASC_TO / DIST_CAST_ASC_TO : _cell_to
 * EFFECT_DSC : {_target_type, _effect_type}
 * TARGET_LIFE_ASC : _target_type
 * TARGET_EFFECT_ASC / TARGET_EFFECT_DSC : {_target_type, _effect_type}
 * TARGET_SAFEST / TARGET_RUDEST / CAST_SAFEST / CAST_RUDEST : - none -
 * TARGET_TURRET_FIRST : - none -
 * */
global GBL_Contract_sorters = {
	DIST_TARGET_ASC_TO: _fct_distance_target_asc,
	DIST_CAST_ASC_TO: _fct_distance_cast_asc,

	EFFECT_DSC: _fct_effect_dsc,

	TARGET_LIFE_ASC: _fct_target_life_asc,

	TARGET_EFFECT_ASC: _fct_target_effect_asc,
	TARGET_EFFECT_DSC: _fct_target_effect_dsc,

	TARGET_SAFEST: _fct_target_safest,
	TARGET_RUDEST: _fct_target_rudest,
	CAST_SAFEST: _fct_cast_safest,
	CAST_RUDEST: _fct_cast_rudest,

	TARGET_TURRET_FIRST: _fct_target_turret,
};
// ____________________________________________________
// ---------------------- UTILS -----------------------


function _compare_map_danger(_cell_1, _cell_2) {
	return GBL_radar_tactic_map_by_cells[_cell_1].compareRateSumLife(GBL_radar_tactic_map_by_cells[_cell_2]);
};

function _effect_sum_value(_option, _effect_type, _target_type) {
	return arrayFoldLeft(_option._targets, function(_target_fold, _option_target) {
		return _target_fold +
			((_target_type & getLeekById(_option_target._target_id).leek_type) !== 0) ?
			arrayFoldLeft(_option_target._target_effects, function(_effect_fold, _target_effect) {
				return _effect_fold +
					((_target_effect._effect_type === _effect_type) ?
						_target_effect._effect_value :
						0);
			}, 0) :
			0;
	}, 0);
};

function _life_sum_value(_option, _target_type) {
	return arrayFoldLeft(_option._targets, function(_target_fold, _option_target) {
		var _currentLeek = getLeekById(_option_target._target_id);
		return _target_fold +
			((_target_type & _currentLeek.leek_type) !== 0) ? _currentLeek.leek_life : 0;
	}, 0);
};

// ____________________________________________________
// ----------------- DISTANCE SORTERS -----------------
function _distance_to(_option1_cell, _option2_cell, _cellTo) {
	var _dist_1 = getPathLength(_cellTo, _option1_cell);
	_dist_1 = (_dist_1 === null ? getCellDistance(_cellTo, _option1_cell) : _dist_1);
	var _dist_2 = getPathLength(_cellTo, _option2_cell);
	_dist_2 = (_dist_2 === null ? getCellDistance(_cellTo, _option2_cell) : _dist_2);
	return {
		dist_1: _dist_1,
		dist_2: _dist_2,
	};
};

function _fct_distance_target_asc(_cell_to) {
	return function(_option1, _option2) {
		var _dist = _distance_to(_option1._target_cell, _option2._target_cell, _cell_to);
		return ((_dist.dist_1 < _dist.dist_2) ? -1 : ((_dist.dist_1 > _dist.dist_2) ? 1 : 0));
	};
};

function _fct_distance_cast_asc(_cell_to) {
	return function(_option1, _option2) {
		var _dist = _distance_to(_option1._caster_cell, _option2._caster_cell, _cell_to);
		return ((_dist.dist_1 < _dist.dist_2) ? -1 : ((_dist.dist_1 > _dist.dist_2) ? 1 : 0));
	};
};
// ____________________________________________________
// ----------------- EFFECT SORTERS -----------------
function _fct_effect_dsc(_params) {
	return function(_option1, _option2) {
		var _value_1 = _effect_sum_value(_option1, _params._effect_type, _params._target_type);
		var _value_2 = _effect_sum_value(_option2, _params._effect_type, _params._target_type);
		return ((_value_1 > _value_2) ? -1 : ((_value_1 < _value_2) ? 1 : 0));
	};
};
// ____________________________________________________
// ---------------- TARGET LEEK SORTER ----------------
function _target_life_sum_value(_option, _target_type) {
	return arrayFoldLeft(_option._targets, function(_target_fold, _option_target) {
		var _this_target_type = getLeekById(_option_target._target_id).leek_type;
		var _target_lifeNext = getLeekStateById(_option_target._target_id).leek_lifeNext;
		return (_target_fold + (((_target_type & _this_target_type) !== 0) ? _target_lifeNext : 0));
	}, 0);
};

function _target_lifeMax_sum_value(_option, _target_type) {
	return arrayFoldLeft(_option._targets, function(_target_fold, _option_target) {
		var _this_target_type = getLeekById(_option_target._target_id).leek_type;
		var _target_lifeMax = getLeekStateById(_option_target._target_id).leek_lifeMax;
		return (_target_fold + (((_target_type & _this_target_type) !== 0) ? _target_lifeMax : 0));
	}, 1);
};

function _fct_target_life_asc(_target_type) {
	return function(_option1, _option2) {
		var _value_1 = _target_life_sum_value(_option1, _target_type) / _target_lifeMax_sum_value(_option1, _target_type);
		var _value_2 = _target_life_sum_value(_option2, _target_type) / _target_lifeMax_sum_value(_option2, _target_type);
		return ((_value_1 < _value_2) ? -1 : ((_value_1 > _value_2) ? 1 : 0));
	};
};
// ____________________________________________________
// ---------------- TARGET MAP SORTER -----------------
function _fct_target_safest() {
	return function(_option1, _option2) {
		var _dist_1 = getCellDistance(_option1._caster_cell, myLeek().leek_cell);
		var _dist_2 = getCellDistance(_option2._caster_cell, myLeek().leek_cell);
		var _dist = _dist_1 < _dist_2 ? -1 : (_dist_1 > _dist_2 ? 1 : 0);
		var _map_danger = _compare_map_danger(_option1._target_cell, _option2._target_cell);
		return _map_danger !== 0 ? _map_danger : _dist;
	};
};

function _fct_target_rudest() {
	return function(_option1, _option2) {
		var _dist_1 = getCellDistance(_option1._caster_cell, myLeek().leek_cell);
		var _dist_2 = getCellDistance(_option2._caster_cell, myLeek().leek_cell);
		var _dist = _dist_1 < _dist_2 ? -1 : (_dist_1 > _dist_2 ? 1 : 0);
		var _map_danger = -_compare_map_danger(_option1._target_cell, _option2._target_cell);
		return _map_danger !== 0 ? _map_danger : _dist;
	};
};

// ____________________________________________________
// ---------------- CAST MAP SORTER -----------------
function _fct_cast_safest() {
	return function(_option1, _option2) {
		var _dist_1 = getCellDistance(_option1._caster_cell, myLeek().leek_cell);
		var _dist_2 = getCellDistance(_option2._caster_cell, myLeek().leek_cell);
		var _dist = _dist_1 < _dist_2 ? -1 : (_dist_1 > _dist_2 ? 1 : 0);
		var _map_danger = _compare_map_danger(_option1._caster_cell, _option2._caster_cell);
		return _map_danger !== 0 ? _map_danger : _dist;
	};
};

function _fct_cast_rudest() {
	return function(_option1, _option2) {
		var _dist_1 = getCellDistance(_option1._caster_cell, myLeek().leek_cell);
		var _dist_2 = getCellDistance(_option2._caster_cell, myLeek().leek_cell);
		var _dist = _dist_1 < _dist_2 ? -1 : (_dist_1 > _dist_2 ? 1 : 0);
		var _map_danger = -_compare_map_danger(_option1._caster_cell, _option2._caster_cell);
		return _map_danger !== 0 ? _map_danger : _dist;
	};
};

// ____________________________________________________
// -------------- TARGET EFFECT SORTER ----------------
function _target_effect_sum_value(_option, _effect_type, _target_type) {
	return arrayFoldLeft(_option._targets, function(_target_fold, _option_target) {
		var _this_target_type = getLeekById(_option_target._target_id).leek_type;
		var _target_effect_sum = getEffectSumValueOfLeek(getLeekById(_option_target._target_id), _effect_type);
		return (_target_fold + (((_target_type & _this_target_type) !== 0) ? _target_effect_sum : 0));
	}, 0);
};

function _fct_target_effect_asc(_params) {
	return function(_option1, _option2) {
		var _value_1 = _target_effect_sum_value(_option1, _params._effect_type, _params._target_type);
		var _value_2 = _target_effect_sum_value(_option2, _params._effect_type, _params._target_type);
		return ((_value_1 > _value_2) ? -1 : ((_value_1 < _value_2) ? 1 : 0));
	};
};

function _fct_target_effect_dsc(_params) {
	return function(_option1, _option2) {
		var _value_1 = _target_effect_sum_value(_option1, _params._effect_type, _params._target_type);
		var _value_2 = _target_effect_sum_value(_option2, _params._effect_type, _params._target_type);
		return ((_value_1 > _value_2) ? -1 : ((_value_1 < _value_2) ? 1 : 0));
	};
};

function _fct_target_turret() {
	return function(_option1, _option2) {
		var _containTurret_1 = arrayInclude(_option1._targets, function(_option_target) {
			return getLeekById(_option_target._target_id).leek_isTurret;
		});
		var _containTurret_2 = arrayInclude(_option2._targets, function(_option_target) {
			return getLeekById(_option_target._target_id).leek_isTurret;
		});
		return _containTurret_1 ? (_containTurret_2 ? 0 : -1) : (_containTurret_2 ? 1 : 0);
	};
};